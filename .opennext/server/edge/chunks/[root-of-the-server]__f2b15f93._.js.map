{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\n\nconst AUTH_PATHS = [\"/login\", \"/forgot-password\"];\n\nconst middleware = async (req: NextRequest) => {\n  const token = req.cookies.get(\"token\")?.value;\n  // Debug: log route and token value\n  console.log(\"[MIDDLEWARE] Path:\", req.nextUrl.pathname);\n  console.log(\"[MIDDLEWARE] token cookie:\", token);\n  \n  // Redirect /admin to /dashboard\n  if (req.nextUrl.pathname.startsWith(\"/admin\")) {\n    const newPath = req.nextUrl.pathname.replace(\"/admin\", \"/dashboard\");\n    console.log(\"[MIDDLEWARE] Redirecting /admin to /dashboard:\", newPath);\n    return NextResponse.redirect(new URL(newPath, req.url));\n  }\n  \n  \n  const isAuthPage = AUTH_PATHS.some((p) => req.nextUrl.pathname.startsWith(p));\n\n  // If token exists, do basic validation\n  if (token) {\n    // Use env var for backend URL, fallback to localhost\n    const backendUrl = process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:8080\";\n    let valid = false;\n    try {\n      const res = await fetch(`${backendUrl}/api/auth/validate-token`, {\n        method: \"POST\",\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      let data = null;\n      if (res.ok) {\n        data = await res.json();\n        valid = data.valid;\n      }\n    } catch (error) {\n      console.log(\"[MIDDLEWARE] Token validation error:\", error);\n      valid = false;\n    }\n    \n    // Fallback: Basic JWT token validation (check if it has the right structure)\n    if (!valid) {\n      const tokenParts = token.split('.');\n      valid = tokenParts.length === 3; // JWT has 3 parts\n      \n      if (valid) {\n        try {\n          // Try to decode the JWT payload to check if it's valid\n          const payload = JSON.parse(atob(tokenParts[1]));\n          valid = payload && payload.exp && payload.exp > Date.now() / 1000;\n          console.log(\"[MIDDLEWARE] Token validation:\", valid, \"expires:\", new Date(payload.exp * 1000));\n        } catch (e) {\n          valid = false;\n          console.log(\"[MIDDLEWARE] Token decode error:\", e);\n        }\n      }\n    }\n    \n    console.log(\n      \"[MIDDLEWARE] isAuthPage:\",\n      isAuthPage,\n      \"| token valid:\",\n      valid\n    );\n    if (isAuthPage && valid) {\n      // Already logged in, redirect to dashboard\n      console.log(\n        \"[MIDDLEWARE] Redirecting authenticated user from auth page to /dashboard\"\n      );\n      return NextResponse.redirect(new URL(\"/dashboard\", req.url));\n    }\n    if (!isAuthPage && !valid) {\n      // Invalid token, redirect to login\n      console.log(\n        \"[MIDDLEWARE] Invalid or missing token, redirecting to /login\"\n      );\n      const resp = NextResponse.redirect(new URL(\"/login\", req.url));\n      resp.cookies.delete(\"token\");\n      return resp;\n    }\n    // Valid token, allow\n    console.log(\"[MIDDLEWARE] Valid token, allowing request\");\n    return NextResponse.next();\n  }\n  // No token\n  if (!isAuthPage) {\n    // Not logged in, redirect to login\n    console.log(\n      \"[MIDDLEWARE] No token and not on auth page, redirecting to /login\"\n    );\n    return NextResponse.redirect(new URL(\"/login\", req.url));\n  }\n  // On login/forgot-password, allow\n  console.log(\"[MIDDLEWARE] On auth page without token, allowing request\");\n  return NextResponse.next();\n};\n\nexport default middleware;\n\nexport const config = {\n  matcher: [\"/dashboard\", \"/admin\", \"/login\", \"/forgot-password\", \"/dashboard/:path*\", \"/admin/:path*\"],\n};\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AAEA,MAAM,aAAa;IAAC;IAAU;CAAmB;AAEjD,MAAM,aAAa,OAAO;IACxB,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU;IACxC,mCAAmC;IACnC,QAAQ,GAAG,CAAC,sBAAsB,IAAI,OAAO,CAAC,QAAQ;IACtD,QAAQ,GAAG,CAAC,8BAA8B;IAE1C,gCAAgC;IAChC,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW;QAC7C,MAAM,UAAU,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU;QACvD,QAAQ,GAAG,CAAC,kDAAkD;QAC9D,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,SAAS,IAAI,GAAG;IACvD;IAGA,MAAM,aAAa,WAAW,IAAI,CAAC,CAAC,IAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAE1E,uCAAuC;IACvC,IAAI,OAAO;QACT,qDAAqD;QACrD,MAAM,aAAa,oGAAwC;QAC3D,IAAI,QAAQ;QACZ,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,GAAG,WAAW,wBAAwB,CAAC,EAAE;gBAC/D,QAAQ;gBACR,SAAS;oBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;gBAAC;YAC9C;YACA,IAAI,OAAO;YACX,IAAI,IAAI,EAAE,EAAE;gBACV,OAAO,MAAM,IAAI,IAAI;gBACrB,QAAQ,KAAK,KAAK;YACpB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC,wCAAwC;YACpD,QAAQ;QACV;QAEA,6EAA6E;QAC7E,IAAI,CAAC,OAAO;YACV,MAAM,aAAa,MAAM,KAAK,CAAC;YAC/B,QAAQ,WAAW,MAAM,KAAK,GAAG,kBAAkB;YAEnD,IAAI,OAAO;gBACT,IAAI;oBACF,uDAAuD;oBACvD,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,UAAU,CAAC,EAAE;oBAC7C,QAAQ,WAAW,QAAQ,GAAG,IAAI,QAAQ,GAAG,GAAG,KAAK,GAAG,KAAK;oBAC7D,QAAQ,GAAG,CAAC,kCAAkC,OAAO,YAAY,IAAI,KAAK,QAAQ,GAAG,GAAG;gBAC1F,EAAE,OAAO,GAAG;oBACV,QAAQ;oBACR,QAAQ,GAAG,CAAC,oCAAoC;gBAClD;YACF;QACF;QAEA,QAAQ,GAAG,CACT,4BACA,YACA,kBACA;QAEF,IAAI,cAAc,OAAO;YACvB,2CAA2C;YAC3C,QAAQ,GAAG,CACT;YAEF,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,IAAI,GAAG;QAC5D;QACA,IAAI,CAAC,cAAc,CAAC,OAAO;YACzB,mCAAmC;YACnC,QAAQ,GAAG,CACT;YAEF,MAAM,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;YAC5D,KAAK,OAAO,CAAC,MAAM,CAAC;YACpB,OAAO;QACT;QACA,qBAAqB;QACrB,QAAQ,GAAG,CAAC;QACZ,OAAO,gMAAY,CAAC,IAAI;IAC1B;IACA,WAAW;IACX,IAAI,CAAC,YAAY;QACf,mCAAmC;QACnC,QAAQ,GAAG,CACT;QAEF,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;IACxD;IACA,kCAAkC;IAClC,QAAQ,GAAG,CAAC;IACZ,OAAO,gMAAY,CAAC,IAAI;AAC1B;uCAEe;AAER,MAAM,SAAS;IACpB,SAAS;QAAC;QAAc;QAAU;QAAU;QAAoB;QAAqB;KAAgB;AACvG"}}]
}