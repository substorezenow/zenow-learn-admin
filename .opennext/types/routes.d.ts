// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/dashboard" | "/dashboard/blogs" | "/dashboard/categories" | "/dashboard/courses" | "/dashboard/debug" | "/dashboard/fields" | "/dashboard/modules" | "/dashboard/profile" | "/dashboard/security" | "/dashboard/settings" | "/dashboard/students" | "/forgot-password" | "/login" | "/secure-login" | "/test-secure"
type AppRouteHandlerRoutes = "/api/admin/categories" | "/api/admin/categories/[id]" | "/api/admin/courses" | "/api/admin/courses/[id]" | "/api/admin/fields" | "/api/admin/fields/[id]" | "/api/admin/security-dashboard" | "/api/admin/stats" | "/api/auth/clear-cookies" | "/api/auth/login" | "/api/auth/logout" | "/api/auth/secure-login" | "/api/auth/session-verify" | "/api/auth/validate-fingerprint"
type PageRoutes = never
type LayoutRoutes = "/" | "/dashboard"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/admin/categories": {}
  "/api/admin/categories/[id]": { "id": string; }
  "/api/admin/courses": {}
  "/api/admin/courses/[id]": { "id": string; }
  "/api/admin/fields": {}
  "/api/admin/fields/[id]": { "id": string; }
  "/api/admin/security-dashboard": {}
  "/api/admin/stats": {}
  "/api/auth/clear-cookies": {}
  "/api/auth/login": {}
  "/api/auth/logout": {}
  "/api/auth/secure-login": {}
  "/api/auth/session-verify": {}
  "/api/auth/validate-fingerprint": {}
  "/dashboard": {}
  "/dashboard/blogs": {}
  "/dashboard/categories": {}
  "/dashboard/courses": {}
  "/dashboard/debug": {}
  "/dashboard/fields": {}
  "/dashboard/modules": {}
  "/dashboard/profile": {}
  "/dashboard/security": {}
  "/dashboard/settings": {}
  "/dashboard/students": {}
  "/forgot-password": {}
  "/login": {}
  "/secure-login": {}
  "/test-secure": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/dashboard": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
